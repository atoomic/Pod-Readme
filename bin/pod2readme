#!/usr/bin/env perl

use v5.10.1;

use strict;
use warnings;

use Getopt::Long::Descriptive;
use IPC::System::Simple qw/ run /;
use Path::Class qw/ dir /;
use Pod::Readme;

# TODO POD

my %FORMATS = (
    'text'     => { cmd => 'pod2text "%s" "%s"', ext => '' },
    'markdown' => { cmd => 'pod2markdown "%s" "%s"', ext => '.md' },
    'pod'      => { ext => '.pod' },
    'html'     => { cmd => 'pod2html --quiet --infile="%s" --outfile="%s"',
                    ext => '.html' },
);

# TODO backup option

my ($opt, $usage) = describe_options(
    '%c %o',
    [],
    ['Extract README from POD'],
    [],
    [ 'output|o'   => "output filename" ],
    [ 'format|f=s' => "output format", { default => 'text' } ],
    [ 'stdout|c'   => "output to stdout (console)" ],
    [ 'help|h'     => "print usage and exit" ],
    { show_defaults => 1 },
);

die $usage if $opt->help;

my %args = ();

if (my $input = shift @ARGV) {
    $args{input_file} = $input;
}

my $format = $FORMATS{ $opt->format };
my $output = $opt->output || 'README' . $format->{ext};

unless ($opt->stdout) {
    my $tmp_dir = dir( $ENV{TMP} || '/tmp' );
    $args{output_file} =
        $format->{cmd} ?
        ($tmp_dir->tempfile( SUFFIX => '.pod', UNLINK => 1 ))[1]
        : $output;
}

my $pf = Pod::Readme->new(%args);

$pf->filter_file;

if (my $cmd = $format->{cmd}) {
    run( sprintf($cmd, $args{output_file}, $output) );
}
